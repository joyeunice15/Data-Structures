#include <iostream>
using namespace std;
// Function to sort the array
void bubbleSort(int arr[], int n) {
    for (int i = 0; i < n-1; i++) {
        for (int j = 0; j < n-i-1; j++) {
            if (arr[j] > arr[j+1]) {
                // Swap arr[j] and arr[j+1]
                int temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
        }
    }
}

// Function to calculate absolute value
int absolute(int x) {
    return (x < 0) ? -x : x;
}

int closestThreeSum(int arr[], int n, int X) {
    bubbleSort(arr, n);
    int closestSum = arr[0] + arr[1] + arr[2];

    for (int i = 0; i < n - 2; ++i) {
        int left = i + 1;
        int right = n - 1;

        while (left < right) {
            int currentSum = arr[i] + arr[left] + arr[right];

            if (absolute(X - currentSum) < absolute(X - closestSum)) {
                closestSum = currentSum;
            }

            if (currentSum < X) {
                ++left;
            } else {
                --right;
            }
        }
    }

    return closestSum;
}

int main() {
    int arr1[] = {-1, 2, 1, -4};
    int n1 = sizeof(arr1) / sizeof(arr1[0]);
    int X1 = 1;
    cout << "Closest sum to " << X1 << " is " << closestThreeSum(arr1, n1, X1) << endl;

    int arr2[] = {1, 2, 3, 4, -5};
    int n2 = sizeof(arr2) / sizeof(arr2[0]);
    int X2 = 10;
    cout << "Closest sum to " << X2 << " is " << closestThreeSum(arr2, n2, X2) << endl;

    return 0;
}
